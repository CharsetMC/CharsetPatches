buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "gradle.plugin.net.minecrell:licenser:0.3"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'net.minecrell.licenser'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "0.1.7"
group = "pl.asie.charset.patches"
archivesBaseName = "CharsetPatches"

if (System.getenv("BUILD_NUMBER") != null)
	version += ".${System.getenv("BUILD_NUMBER")}"

configurations {
	deploy
}

dependencies {
	deploy 'org.apache.maven.wagon:wagon-ssh:2.10'
}

minecraft {
	version = "1.12.2-14.23.5.2838"

	runDir = "run"
	useDepAts = true
	makeObfSourceJar = false
	mappings = "stable_39"

	replace '@VERSION@', project.version
	replace '@MC_VERSION@', version
}

repositories {
	mavenCentral()
	ivy {
		name 'asie dependency mirror'
		artifactPattern "http://asie.pl/javadeps/[module]-[revision](-[classifier]).[ext]"
	}
}

dependencies {
	deobfCompile name: "charset", version: "0560alpha"
}

license {
	sourceSets = [project.sourceSets.main]
	header = project.file("docs/licenses/LICENSE")
	ignoreFailures = true
	exclude '**/*.lang'
	exclude '**/*.info'
	exclude '**/*.mcmeta'
}

sourceSets {
	main {
		resources {
			srcDirs += 'docs'
		}
	}
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}


jar {
    manifest {
        attributes("FMLCorePlugin": "pl.asie.charset.patches.CharsetPatchCore")
    }
}

if (file('private.gradle').exists()) {
	apply from: 'private.gradle'
}

//task signJar(type: SignJar, dependsOn: jar) {
//    onlyIf {
//        project.hasProperty('keyStore')
//    }

//    keyStore = project.keyStore
//    alias = project.keyStoreAlias
//    storePass = project.keyStorePass
//    keyPass = project.keyStoreKeyPass
//    inputFile = jar.archivePath
//    outputFile = jar.archivePath
//}

//build.dependsOn(signJar)
